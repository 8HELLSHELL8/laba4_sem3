{"ast":null,"code":"var _jsxFileName = \"/home/anton/laba4/frontend/src/pages/AuthPage.js\",\n  _s = $RefreshSig$();\n// Likely structure of your pages/AuthPage.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n// Import your CSS if you have one: import '../css/AuthPage.css';\n\n// Make sure it accepts the prop from App.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = ({\n  updateAuthState\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true); // Assuming you might have Register too\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setLoading(true);\n\n    // Determine endpoint based on isLogin state (if you have registration)\n    const endpoint = isLogin ? '/api/login' : '/api/register'; // Adjust if only login exists\n\n    try {\n      // Use the login endpoint\n      const response = await axios.post(`http://localhost:5000${endpoint}`, {\n        name,\n        password\n      }, {\n        withCredentials: true\n      } // Crucial for cookies\n      );\n      console.log('Auth successful:', response.data); // For debugging\n\n      // ***** THIS IS THE MOST IMPORTANT PART *****\n      // Check if the prop exists and call it with 'true' for login success\n      if (updateAuthState) {\n        updateAuthState(true);\n      } else {\n        // This should not happen if App.js is correct\n        console.error(\"AuthPage: updateAuthState prop is missing!\");\n        setError(\"Login succeeded but failed to update app state.\");\n        setLoading(false);\n        return; // Stop execution here if state update fails\n      }\n      // ***** END OF IMPORTANT PART *****\n\n      // Navigation can happen here, or rely on App.js redirecting\n      // It's often better to let App.js handle the redirect based on the state change\n      // navigate('/home'); // You can often remove this line\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || `Authentication failed: ${err.message}`;\n      console.error('Auth failed:', err);\n      setError(message);\n      // Ensure we DON'T call updateAuthState(false) on login failure\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to toggle between Login/Register forms (optional)\n  const switchMode = () => {\n    setIsLogin(prevIsLogin => !prevIsLogin);\n    setError(''); // Clear errors when switching\n    setName('');\n    setPassword('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isLogin ? 'Login' : 'Register'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true,\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"submit-button\",\n        children: loading ? 'Processing...' : isLogin ? 'Login' : 'Register'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthPage, \"GUVwQ2OxeJqDXnzvAxkqwlcUVPM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","AuthPage","updateAuthState","_s","isLogin","setIsLogin","name","setName","password","setPassword","error","setError","loading","setLoading","navigate","handleSubmit","e","preventDefault","endpoint","response","post","withCredentials","console","log","data","err","_err$response","_err$response$data","message","switchMode","prevIsLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["/home/anton/laba4/frontend/src/pages/AuthPage.js"],"sourcesContent":["// Likely structure of your pages/AuthPage.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n// Import your CSS if you have one: import '../css/AuthPage.css';\n\n// Make sure it accepts the prop from App.js\nconst AuthPage = ({ updateAuthState }) => {\n    const [isLogin, setIsLogin] = useState(true); // Assuming you might have Register too\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setError('');\n        setLoading(true);\n\n        // Determine endpoint based on isLogin state (if you have registration)\n        const endpoint = isLogin ? '/api/login' : '/api/register'; // Adjust if only login exists\n\n        try {\n            // Use the login endpoint\n            const response = await axios.post(`http://localhost:5000${endpoint}`,\n                { name, password },\n                { withCredentials: true } // Crucial for cookies\n            );\n\n            console.log('Auth successful:', response.data); // For debugging\n\n            // ***** THIS IS THE MOST IMPORTANT PART *****\n            // Check if the prop exists and call it with 'true' for login success\n            if (updateAuthState) {\n                updateAuthState(true);\n            } else {\n                // This should not happen if App.js is correct\n                console.error(\"AuthPage: updateAuthState prop is missing!\");\n                setError(\"Login succeeded but failed to update app state.\");\n                setLoading(false);\n                return; // Stop execution here if state update fails\n            }\n            // ***** END OF IMPORTANT PART *****\n\n\n            // Navigation can happen here, or rely on App.js redirecting\n            // It's often better to let App.js handle the redirect based on the state change\n            // navigate('/home'); // You can often remove this line\n\n        } catch (err) {\n            const message = err.response?.data?.message || `Authentication failed: ${err.message}`;\n            console.error('Auth failed:', err);\n            setError(message);\n             // Ensure we DON'T call updateAuthState(false) on login failure\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    // Function to toggle between Login/Register forms (optional)\n    const switchMode = () => {\n        setIsLogin((prevIsLogin) => !prevIsLogin);\n        setError(''); // Clear errors when switching\n        setName('');\n        setPassword('');\n    };\n\n\n    return (\n        <div className=\"auth-container\"> {/* Add a container class */}\n            <h2>{isLogin ? 'Login' : 'Register'}</h2> {/* Dynamic title */}\n            <form onSubmit={handleSubmit} className=\"auth-form\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"username\">Username:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                        required\n                        className=\"form-input\"\n                    />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        required\n                        className=\"form-input\"\n                    />\n                </div>\n                {error && <p className=\"error-message\">{error}</p>}\n                <button type=\"submit\" disabled={loading} className=\"submit-button\">\n                    {loading ? 'Processing...' : (isLogin ? 'Login' : 'Register')}\n                </button>\n            </form>\n            {/* Optional: Button to switch between Login and Register */}\n            {/*\n            <button onClick={switchMode} className=\"switch-button\">\n                {isLogin ? 'Need an account? Register' : 'Already have an account? Login'}\n            </button>\n            */}\n        </div>\n    );\n};\n\nexport default AuthPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}