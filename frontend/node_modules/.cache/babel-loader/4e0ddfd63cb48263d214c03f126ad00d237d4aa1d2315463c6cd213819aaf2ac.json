{"ast":null,"code":"var _jsxFileName = \"/home/anton/laba4/frontend/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios';\nimport AuthPage from './pages/AuthPage';\nimport NotFound from './pages/NotFound';\nimport Detail from './pages/Detail';\nimport Layout from './components/Layout';\nimport Profile from './pages/Profile';\nimport Home from './pages/Home';\nimport './css/App.css';\n\n// Simplified ProtectedRoute - relies on props\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  isAuthenticated,\n  isLoading,\n  children\n}) => {\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Checking authentication...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this); // Show loading during initial app load check\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/auth\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 39\n  }, this);\n};\n_c = ProtectedRoute;\nfunction App() {\n  _s();\n  // Use null to represent the initial \"unknown\" state\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // Start loading\n  const navigate = useNavigate(); // Use navigate hook here if needed for other logic\n\n  // Check authentication status only once on initial app load\n  useEffect(() => {\n    const checkInitialAuth = async () => {\n      setIsLoading(true); // Ensure loading state is true\n      try {\n        // Use the same endpoint your ProtectedRoute used\n        await axios.get('http://localhost:5000/api/protected', {\n          withCredentials: true\n        });\n        setIsAuthenticated(true); // User has a valid session\n      } catch (error) {\n        setIsAuthenticated(false); // No valid session\n      } finally {\n        setIsLoading(false); // Finished check\n      }\n    };\n    checkInitialAuth();\n  }, []); // Empty dependency array means run only once on mount\n\n  // Function for AuthPage to call upon successful login\n  const updateAuthState = status => {\n    setIsAuthenticated(status);\n    // No need to navigate here, AuthPage handles navigation\n  };\n\n  // --- Render Logic ---\n\n  // Optional: Show a global loading indicator while checking initial auth\n  // if (isLoading) {\n  //   return <p>Loading Application...</p>;\n  // }\n  // Note: ProtectedRoute now handles its own loading display during the check phase\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/auth\",\n      element: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }, this) :\n      // Prevent flicker during initial load\n      isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/home\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(AuthPage, {\n        updateAuthState: updateAuthState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n        isAuthenticated: isAuthenticated,\n        isLoading: isLoading,\n        children: /*#__PURE__*/_jsxDEV(Layout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this),\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/home\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"home\",\n        element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"detail\",\n        element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rne7lB32rSha3jI2PwFtF9de5OU=\", false, function () {\n  return [useNavigate];\n});\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Routes","Route","Navigate","useNavigate","axios","AuthPage","NotFound","Detail","Layout","Profile","Home","jsxDEV","_jsxDEV","ProtectedRoute","isAuthenticated","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","App","_s","setIsAuthenticated","setIsLoading","navigate","checkInitialAuth","get","withCredentials","error","updateAuthState","status","path","element","index","_c2","$RefreshReg$"],"sources":["/home/anton/laba4/frontend/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Routes, Route, Navigate, useNavigate } from 'react-router-dom'; // Import useNavigate\nimport axios from 'axios';\nimport AuthPage from './pages/AuthPage';\nimport NotFound from './pages/NotFound';\nimport Detail from './pages/Detail';\nimport Layout from './components/Layout';\nimport Profile from './pages/Profile';\nimport Home from './pages/Home';\nimport './css/App.css';\n\n// Simplified ProtectedRoute - relies on props\nconst ProtectedRoute = ({ isAuthenticated, isLoading, children }) => {\n  if (isLoading) {\n    return <p>Checking authentication...</p>; // Show loading during initial app load check\n  }\n\n  return isAuthenticated ? children : <Navigate to=\"/auth\" replace />;\n};\n\n\nfunction App() {\n  // Use null to represent the initial \"unknown\" state\n  const [isAuthenticated, setIsAuthenticated] = useState(null);\n  const [isLoading, setIsLoading] = useState(true); // Start loading\n  const navigate = useNavigate(); // Use navigate hook here if needed for other logic\n\n  // Check authentication status only once on initial app load\n  useEffect(() => {\n    const checkInitialAuth = async () => {\n      setIsLoading(true); // Ensure loading state is true\n      try {\n        // Use the same endpoint your ProtectedRoute used\n        await axios.get('http://localhost:5000/api/protected', {\n          withCredentials: true,\n        });\n        setIsAuthenticated(true); // User has a valid session\n      } catch (error) {\n        setIsAuthenticated(false); // No valid session\n      } finally {\n        setIsLoading(false); // Finished check\n      }\n    };\n\n    checkInitialAuth();\n  }, []); // Empty dependency array means run only once on mount\n\n  // Function for AuthPage to call upon successful login\n  const updateAuthState = (status) => {\n    setIsAuthenticated(status);\n    // No need to navigate here, AuthPage handles navigation\n  };\n\n\n  // --- Render Logic ---\n\n  // Optional: Show a global loading indicator while checking initial auth\n  // if (isLoading) {\n  //   return <p>Loading Application...</p>;\n  // }\n  // Note: ProtectedRoute now handles its own loading display during the check phase\n\n  return (\n    <Routes>\n      {/* Auth Page: Redirect to home if already logged in and done loading */}\n      <Route\n        path=\"/auth\"\n        element={\n          isLoading ? <p>Loading...</p> : // Prevent flicker during initial load\n          isAuthenticated ? <Navigate to=\"/home\" replace /> : <AuthPage updateAuthState={updateAuthState} />\n        }\n      />\n\n      {/* Protected Routes Area */}\n      <Route\n        path=\"/\"\n        element={\n          <ProtectedRoute isAuthenticated={isAuthenticated} isLoading={isLoading}>\n            <Layout />\n          </ProtectedRoute>\n        }\n      >\n        {/* Index route redirects root path '/' to '/home' */}\n        <Route index element={<Navigate to=\"/home\" replace />} />\n        <Route path=\"home\" element={<Home />} />\n        <Route path=\"profile\" element={<Profile />} />\n        <Route path=\"detail\" element={<Detail />} />\n        {/* Add other protected routes here */}\n      </Route>\n\n      {/* 404 Not Found */}\n      <Route path=\"*\" element={<NotFound />} />\n    </Routes>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}